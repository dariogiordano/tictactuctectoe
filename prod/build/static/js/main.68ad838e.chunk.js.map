{"version":3,"sources":["components/H2/index.js","containers/Home/index.js","components/Cell/styled/index.js","components/Cell/index.js","components/Row/index.js","components/Grid/styled/index.js","components/Grid/index.js","containers/Playground/index.js","containers/Quitted/index.js","App.js","serviceWorker.js","index.js"],"names":["H2","styled","h2","_templateObject","props","color","Home","react_default","a","createElement","Helmet","components_H2","Link","to","styledCell","div","styled_templateObject","usable","filled","Cell","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","bind","assertThisInitialized","status","onCellClick","vIndex","hIndex","onClick","React","Component","Row","Row_templateObject","StyledGrid","Grid_styled_templateObject","Grid","state","myPlayer","actualPlayer","grid","matchStatus","togglePlayer","socket","socketIOClient","on","newPlayer","console","log","setState","history","push","newState","direction","results","newElement","getSiblings","find","el","value","getNewItemIndexes","recursiveRowSearch","E_W","toConsumableArray","concat","N_S","NE_SW","NW_SE","length","itemsInARow","getItemsInARow","forEach","emit","objectSpread","lowerSiblings","cell","index","sideSiblings","upperSiblings","siblings","some","w","Math","floor","window","innerWidth","h","innerHeight","_this2","message","Grid_styled","map","row","components_Row","key","item","components_Cell","getIsUsable","Playground","components_Grid","Quitted","App","BrowserRouter","Route","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68ad838e.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst H2 = styled.h2`\n  font-size: 1.5em;\n  color: ${props => props.color};\n  &:hover {\n    cursor: pointer;\n    color: #6cc0e5;\n  }\n`;\n\nexport default H2;\n","import React from \"react\";\nimport H2 from \"../../components/H2\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\n\nconst Home = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Home</title>\n      </Helmet>\n      <H2 color={\"blue\"}>Home </H2>\n      <Link to=\"/play\">Play</Link>\n    </div>\n  );\n};\nexport default Home;\n","import styled from \"styled-components\";\n\nconst styledCell = styled.div`\n  display: inline-block;\n  width: 38px;\n  height: 38px;\n  text-align: center;\n  line-height: 40px;\n  border: 1px solid #ddd;\n  color: ${props => props.color};\n  ${props =>\n    props.usable &&\n    `\n   background: rgba(0,0,0,0.05); \n   `};\n  ${props =>\n    props.filled &&\n    `\n   background: transparent; \n   `};\n  &:hover {\n    ${props =>\n      props.usable &&\n      `cursor: pointer;\n     background: rgba(0,255,0,0.5); \n     `};\n    ${props =>\n      props.filled &&\n      `\n     background: transparent; \n     `};\n  }\n`;\n\nexport default styledCell;\n","import React from \"react\";\nimport StyledCell from \"./styled\";\nclass Cell extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n  }\n  handleChange() {\n    if (this.props.usable && this.props.status === \"empty\")\n      this.props.onCellClick(this.props.vIndex, this.props.hIndex);\n  }\n  render() {\n    return (\n      <StyledCell\n        filled={this.props.status !== \"empty\"}\n        usable={this.props.usable}\n        onClick={this.handleChange}\n      >\n        {this.props.status === \"empty\" ? \" \" : this.props.status}\n      </StyledCell>\n    );\n  }\n}\nexport default Cell;\n","import styled from \"styled-components\";\n\nconst Row = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport default Row;\n","import styled from \"styled-components\";\n\nconst StyledGrid = styled.div`\n  display: block;\n  margin: auto;\n`;\n\nexport default StyledGrid;\n","import React from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport Cell from \"../../components/Cell\";\nimport Row from \"../../components/Row\";\nimport StyledGrid from \"./styled\";\n\nclass Grid extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myPlayer: null,\n      actualPlayer: null,\n      grid: [],\n      matchStatus: null\n    };\n    this.togglePlayer = this.togglePlayer.bind(this);\n    //this.socket = socketIOClient(\"http://localhost:4001\");\n    this.socket = socketIOClient(\"forza5.eu-west-3.elasticbeanstalk.com\");\n\n    this.socket.on(\"set my player\", newPlayer => {\n      console.log(newPlayer);\n      this.setState(state => ({\n        myPlayer: newPlayer\n      }));\n    });\n    this.socket.on(\"left alone\", () => {\n      //alert(\"Your opponent quitted!\");\n      this.props.history.push(`/quitted/`);\n    });\n    this.socket.on(\"update\", newState => {\n      if (this.state.matchStatus !== \"won\") {\n        this.setState(() => ({\n          grid: newState.grid,\n          actualPlayer: newState.actualPlayer,\n          matchStatus: newState.matchStatus\n        }));\n      }\n    });\n  }\n\n  getNewItemIndexes(vIndex, hIndex, direction) {\n    switch (direction) {\n      case \"NW\":\n        vIndex--;\n        hIndex--;\n        break;\n      case \"N\":\n        vIndex--;\n        break;\n      case \"NE\":\n        vIndex--;\n        hIndex++;\n        break;\n      case \"E\":\n        hIndex++;\n        break;\n      case \"SE\":\n        vIndex++;\n        hIndex++;\n        break;\n      case \"S\":\n        vIndex++;\n        break;\n      case \"SW\":\n        vIndex++;\n        hIndex--;\n        break;\n      case \"W\":\n        hIndex--;\n        break;\n      default:\n        break;\n    }\n    return { vIndex, hIndex };\n  }\n\n  recursiveRowSearch(vIndex, hIndex, direction, results) {\n    let newElement = this.getSiblings(vIndex, hIndex).find(\n      el => el.direction === direction\n    );\n    if (newElement && newElement.value === this.state.myPlayer) {\n      vIndex = this.getNewItemIndexes(vIndex, hIndex, direction).vIndex;\n      hIndex = this.getNewItemIndexes(vIndex, hIndex, direction).hIndex;\n      results.push([vIndex, hIndex]);\n      return this.recursiveRowSearch(vIndex, hIndex, direction, results);\n    } else return results;\n  }\n\n  getItemsInARow(vIndex, hIndex) {\n    let E_W = [\n      ...this.recursiveRowSearch(vIndex, hIndex, \"E\", [[vIndex, hIndex]]),\n      ...this.recursiveRowSearch(vIndex, hIndex, \"W\", [])\n    ];\n    let N_S = [\n      ...this.recursiveRowSearch(vIndex, hIndex, \"N\", [[vIndex, hIndex]]),\n      ...this.recursiveRowSearch(vIndex, hIndex, \"S\", [])\n    ];\n    let NE_SW = [\n      ...this.recursiveRowSearch(vIndex, hIndex, \"NE\", [[vIndex, hIndex]]),\n      ...this.recursiveRowSearch(vIndex, hIndex, \"SW\", [])\n    ];\n    let NW_SE = [\n      ...this.recursiveRowSearch(vIndex, hIndex, \"NW\", [[vIndex, hIndex]]),\n      ...this.recursiveRowSearch(vIndex, hIndex, \"SE\", [])\n    ];\n    if (E_W.length === 5) {\n      return E_W;\n    } else if (N_S.length === 5) {\n      return N_S;\n    } else if (NE_SW.length === 5) {\n      return NE_SW;\n    } else if (NW_SE.length === 5) {\n      return NW_SE;\n    } else return [];\n  }\n\n  togglePlayer(vIndex, hIndex) {\n    let grid = this.state.grid;\n    grid[vIndex][hIndex] = this.state.myPlayer;\n    let itemsInARow = this.getItemsInARow(vIndex, hIndex);\n    if (itemsInARow.length === 5) {\n      itemsInARow.forEach(el => {\n        grid[el[0]][el[1]] = \"win\";\n      });\n      this.setState(state => ({\n        grid: grid,\n        matchStatus: \"won\"\n      }));\n      this.socket.emit(\"won\", this.state);\n    } else {\n      let newState = { ...this.state };\n      newState.grid = grid;\n      this.socket.emit(\"moved\", newState);\n    }\n  }\n\n  getSiblings(vIndex, hIndex) {\n    let grid = this.state.grid;\n    let lowerSiblings = [];\n    if (vIndex < grid.length - 1) {\n      grid[vIndex + 1].forEach((cell, index) => {\n        if (index === hIndex - 1)\n          lowerSiblings.push({ value: cell, direction: \"SW\" });\n        else if (index === hIndex)\n          lowerSiblings.push({ value: cell, direction: \"S\" });\n        else if (index === hIndex + 1)\n          lowerSiblings.push({ value: cell, direction: \"SE\" });\n      });\n    }\n    let sideSiblings = [];\n    grid[vIndex].forEach((cell, index) => {\n      if (index === hIndex - 1)\n        sideSiblings.push({ value: cell, direction: \"W\" });\n      else if (index === hIndex + 1)\n        sideSiblings.push({ value: cell, direction: \"E\" });\n    });\n    let upperSiblings = [];\n    if (vIndex > 0) {\n      grid[vIndex - 1].forEach((cell, index) => {\n        if (index === hIndex - 1)\n          upperSiblings.push({ value: cell, direction: \"NW\" });\n        else if (index === hIndex)\n          upperSiblings.push({ value: cell, direction: \"N\" });\n        else if (index === hIndex + 1)\n          upperSiblings.push({ value: cell, direction: \"NE\" });\n      });\n    }\n    return [...lowerSiblings, ...sideSiblings, ...upperSiblings];\n  }\n\n  getIsUsable(vIndex, hIndex) {\n    if (\n      this.state.matchStatus === \"won\" ||\n      this.state.matchStatus === \"lost\" ||\n      this.state.myPlayer !== this.state.actualPlayer\n    )\n      return false;\n    let siblings = this.getSiblings(vIndex, hIndex);\n    return (\n      siblings.some(el => {\n        return el.value === \"O\";\n      }) ||\n      siblings.some(el => {\n        return el.value === \"X\";\n      })\n    );\n  }\n\n  componentDidMount() {\n    let w = Math.floor((window.innerWidth - 20) / 20);\n    let h = Math.floor((window.innerHeight - 40) / 20);\n    this.socket.emit(\"register player\", [w, h]);\n  }\n  componentWillUnmount() {\n    this.socket.emit(\"player will unregister\");\n  }\n\n  render() {\n    if (this.state.matchStatus === null)\n      return <div>wait for the other player to join you</div>;\n    let message = \"Wait for your opponent's move...\";\n    if (this.state.matchStatus === \"won\") message = \"You WON!\";\n    else if (this.state.matchStatus === \"lost\") message = \"You LOST!\";\n    else if (this.state.myPlayer === this.state.actualPlayer)\n      message = \"Make your move!\";\n\n    return (\n      <div>\n        <p>{message}</p>\n        <StyledGrid>\n          {this.state.grid.map((row, vIndex) => (\n            <Row key={vIndex}>\n              {this.state.grid[vIndex].map((item, hIndex) => (\n                <Cell\n                  vIndex={vIndex}\n                  hIndex={hIndex}\n                  key={hIndex}\n                  status={this.state.grid[vIndex][hIndex]}\n                  usable={this.getIsUsable(vIndex, hIndex)}\n                  onCellClick={this.togglePlayer}\n                />\n              ))}\n            </Row>\n          ))}\n        </StyledGrid>\n      </div>\n    );\n  }\n}\nexport default Grid;\n","import React from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"../../components/Grid\";\n\nclass Playground extends React.Component {\n  render() {\n    return (\n      <div>\n        <Helmet>\n          <title>Home</title>\n        </Helmet>\n        <Link to=\"/\">Home</Link>\n        <Grid history={this.props.history} />\n      </div>\n    );\n  }\n}\nexport default Playground;\n","import React from \"react\";\nimport H2 from \"../../components/H2\";\nimport { Helmet } from \"react-helmet\";\nimport { Link } from \"react-router-dom\";\n\nconst Quitted = () => {\n  return (\n    <div>\n      <Helmet>\n        <title>Your opponent quitted</title>\n      </Helmet>\n      <H2 color={\"blue\"}>Your opponent quitted, start a new game </H2>\n      <Link to=\"/play\">Start</Link>\n    </div>\n  );\n};\nexport default Quitted;\n","import React, { Component } from \"react\";\n\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Home from \"./containers/Home\";\nimport Playground from \"./containers/Playground\";\nimport Quitted from \"./containers/Quitted\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/play/\" component={Playground} />\n          <Route path=\"/quitted/\" component={Quitted} />\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}